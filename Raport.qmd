---
title: "Projekt z zakresu analizy danych"
author: Karol Kowal, Marcin Kamiński
execute: 
  echo: false
  warning: false
format: html
editor: visual
---

```{r}
# PACZKI
library(ggplot2)
library(flextable)
library(dplyr)
library(stringr)
library(kableExtra)
library(plotly)
library(reshape2)
library(tidyr)
library(ggthemr)
library(cluster)
```

```{r}
# WCZYTANIE DANYCH
dane <- read.csv("C:\\Premier League Project\\dane.csv")
```

```{r}
knitr::include_graphics("figures\\Baner.png")
```

## Wstęp

Tematem projektu jest analiza wybranych statystyk drużyn piłkarskich uczestniczących w rozgrywkach Premier League, czyli na najwyższym poziomie w angielskiej piłce w latach 2017-2022.

## Dane

Dane z których będziemy korzystać do analizy pozyskaliśmy ze stron [bref.com](https://fbref.com/) oraz [espn.com](https://www.espn.com/). Strony ta nie mają opcji pobierania gotowych zestawień, więc użyliśmy metod web scrappingu poznanych podczas studiów. Poniżej znajduje się część całego zestawienia oraz objaśnienie zmiennych.

```{r}
#| column: page
head(dane[-1], 7) %>% kable() %>% kable_material(c("striped", "hover"))
dupa <- define_palette(swatch = c("black", "#e0005e", "#00db74", "#37003c", "blue", "orange"), gradient = c("#e0005e", "#00db74"))
ggthemr(dupa)
```

::: {.callout-note collapse="true"}
## Objaśnienie zmiennych

`Rk` - Miejsce w tabeli

`Squad` - Nazwa drużyny

`Matchhes.played` - Rozegrane mecze

`Wins` - Mecze wygrane

`Draws` - Remisy

`Loses` - Mecze przegrane

`Goals.for` - Bramki zdobyte

`Goals.against` - Bramki stracone

`Goal.difference` - Różnica bramek

`Points` - Punkty

`Points.per.match` - Średnia punktów zdobytych na mecz

`Expected.goals` - Oczekiwane bramki zdobyte wg. Opta (nie uwzględnia rzutów karnych wykonywanych po dogrywce)

`Expected.goals.allowed` - Oczekiwane bramki stracone wg. Opta (nie uwzględnia rzutów karnych wykonywanych po dogrywce)

`Expected.goals.difference` - Oczekiwana różnica bramek wg. Opta (nie uwzględnia rzutów karnych wykonywanych po dogrywce)

`Expected.goals.per.90.minutes` - Średnia oczekiwana różnica bramek na 90 minut wg. Opta (nie uwzględnia rzutów karnych wykonywanych po dogrywce)

`Attendance` - Średnia Frekwencja na meczach domowych

`Season` - Okres rozgrywek w latach.

`Age` - średnia ważona (względem rozegranych minut) wieku zawodników w drużynie

`Assists` - liczba asyst

`Passes.completed` - ilość celnych podań

`Passes.attempted` - ilość podań ogółem

`Short.passes.completed`- ilość celnych krótkich podań

`Short.passes.attempted` - ilość krótkich podań ogółem

`Medium.passes.completed` - ilość celnych średnich podań

`Medium.passes.attempted` - ilość średnich podań ogółem

`Long.passes.completed` - ilość celnych długich podań

`Long.passes.attempted` - ilość długich podań ogółem

`Progressive.passes` - Podania celne które przesuwają piłkę w stronę bramki przeciwnika co najmniej 10 yardów od jej najdalszego punktu przez ostatnie 6 podań, lub jakiekolwiek celne podanie w pole karne przeciwnika. Nie dotyczy podań z defensywy (40% boiska od strony własnej bramki)

`Live.ball.passes` - podania piłki w grze

`Dead.ball.passes` - podania piłki ze stałych fragmentów gry (rzuty wolne, rzuty rożne, rozpoczęcie gry, wyrzut z autu i rozpoczęcie od bramki)

`Passes.from.free.kicks` - podania z rzutów wolnych

`Through.balls` - celne podania między obrońcami na wolne pole

`Switches` - podania kóre przebyły co najmniej 40 yardów w poprzek boiska

`Crosses` - dośrodkowania

`Throw.in.taken` - wrzuty z autu

`Corner.kicks` - rzuty rożne

`Corner.kicks.in` -

`Corner.kicks.out`

`Corner.kicks.straight`

`Passes.offside` - spalone

`Passes.blocked` - podania zablokowane

`Shoots.total` - liczba strzałów ogółem

`Shoots.on.target` - liczba strzałów celnych

`Average.shot.distance` - średni dystans strzału w yardach (rzuty karne się nie liczą)

`Free.kick.shots` - strzały z rzutów wolnych

`Shot.creating.actions` - dwie ofensywne akcje które prowadzą do oddania strzału, takie jak - podania, odbiory i wymuszone faule. Jeden gracz może wykonać wiele takich akcji. Możemy także uznać, strzelca za twórce akcji.

`SCA.Live.ball.pass` - celne podania "z gry" które doprowadziły do strzału

`SCA.Dead.ball.pass` - celne podania po stałym fragmencie które doprowadziły do strzału

`SCA.Take.on` - ominięcia przeciwnika doprowadziły do strzału

`SCA.Shot` - strzały, które doprowadziły do ponownego strzału

`SCA.Fouls.drawn` - sprowokowane faule, które doprowadziły do strzału

`SCA.Deffensive.action` - akcje defensywne które doprowadziły do oddania strzału

`Goal.creatiing.actions` - dwie ofensywne akcje które prowadzą do strzelenia bramki, takie jak - podania, odbiory i wymuszone faule. Jeden gracz może wykonać wiele takich akcji. Możemy także uznać, strzelca za twórce akcji.

`GCA.Live.ball.pass` - celne podania "z gry" które doprowadziły do strzelenia bramki

`GCA.Dead.ball.pass` - celne podania po stałym fragmencie które doprowadziły do strzelenia bramki

`GCA.Take.on` - ominięcia przeciwnika które doprowadziły do strzelenia bramki

`GCA.Shot` - strzały, które doprowadziły do ponownego strzelenia bramki

`GCA.Fouls.drawn` - sprowokowane faule, które doprowadziły do strzelenia bramki

`GCA.Deffensive.action` - akcje defensywne które doprowadziły do oddania strzelenia bramki

`Penalty.kicks.attempted` - rzuty karne ogółem (do bramki przeciwnika)

`Penalty.kicks.made` - wykorzystane rzuty karne

`Tackles` - próby odbioru

`Tackles.won` - skuteczne próby odbioru

`Tackles.def.3rd` - próby odbioru w defensywnej tercji boiska

`Tackles.mid.3rd` - próby odbioru w środkowej tercji boiska

`Tackles.att.3rd` - próby odbioru w ofensywnej tercji boiska

`Dribblers.tackled` - odbiory piłki z dryblingu

`Dribblers.challenged` - próby odbiorów piłki z dryblingu

`Challenges.lost` - nieudane próby odbiorów piłki z dryblingu

`Blocks` - zablokowane piłki (zawodnik stał na lini lotu piłki)

`Shots.blocked` - zablokowane strzały

`Blocked.passes` - zablokowane podania

`Interceptions` - przechwyty

`Clearances` - wybicia piłki

`Errors` - błędy prowadzące do oddania strzału przez przeciwnika

`Ball.recoveries` - odzyskane piłki

`Fouls.commited` - popełnione faule

`Yellow.cards` - żółte kartki

`Second.yellow.card` - drugie zółte kartki

`Red.cards` - czerwone kartki

`Own.goals` - bramki samobójcze

`Possession` - posiadanie piłki (liczone jako procent wykonanych podań podczas meczu)

`Touches` - liczba dotknięć piłki przez gracza (jeżeli zawodnik odebrał podanie, wykonał drybling i podał piłkę dalej liczone jest to jako jedno dotknięcie)

`Touches.def.pen` - liczba dotknięć piłki we własnym polu karnym

`Touches.def.3rd` - liczba dotknięć piłki w obronnej tercji boiska

`Touches.mid.3rd` - liczba dotknięć piłki w środkowej tercji boiska

`Touches.att.3rd` - liczba dotknięć piłki w ofensywnej tercji boiska

`Touches.att.pen` - liczba dotknięć piłki w polu karnym przeciwnika

`Takes.on.attempted` - próby ominięcia przeciwnika

`Takes.on.succesful` - udane próby ominięcia przeciwnika

`Times.tackled.during.take.on` - liczba sytuacji w której przeciwnik podczas mijania próbował odebrać piłkę

`Carries` - liczba sytuacji w których gracz kotnrolował piłkę stopą

`Total.carrying.distance` - dystanas w yardach który zawodnik przebył z piłką

`Progressive.carrying.distance` - dystanas w yardach który zawodnik przebył z piłką w strone bramki przeciwnika

`Progressive.carries` - sytuacje w których zawodnik prowadził piłkę w storne bramki linii bramki przeciwnika co najmniej 10 yardów od jej najdalszego punktu przez ostatnie 6 podań, lub jakiekolwiek doprowadzenie piłki w pole karne przeciwnika.

`Carries.into.final.third` - doprowadzenia piłki do ofensywnej tercji boiska

`Carreis.into.penalty.area` - doprowadzenia piłki w pole karne

`Miscontrols` - nieudane próby opanowania piłki

`Dispossessed` - straty piłki po odbiorach przeciwnika (nie liczą się odbiory po próbie ominięcia zawodnika)

`Fouls.drawn` - sytuacje w której zawodnik został sfaulowany

`Passes.recived` - otrzymane podania

`Progressive.passes.recived` - otrzymane podania progresywne

`Aerials.won` - wygrane walki w powietrzu

`Aerial.lost` - przegrane walki w powietrzu

`Substitute.apperances` - ilość dokonanych zmian

`Matchehs.as.unused.sub` - mecze bez wykorzystania wszystkich zmian
:::

Wszystkie dane które pobraliśmy z ww. stron były kompletne, więc nie musimy martwić się ich uzupełnianiem. Ponieważ nasz zbiór jest dosyć spory, zdecydowaliśmy się podzielić go na cztery części: strzały, podania, posiadanie piłki i obrona.

## Charakterystka ligi

Od lat w żargonie kibiców i ekspertów angielskiej piłki funkcjonuje "Big six" oznaczające sześć najlepszych drużyn występujących w Premier League są to: Manchester United, Arsenal, Chelsea, Liverpool, Manchester city oraz Tottenham. Poniżej znajduje się wykres przedstawiający średnią liczbę punktów zdobywanych na sezon w latach 2017-2023, pokazuje nam on, że to określenie jest wciąż aktualne.

```{r}
library(leaflet)
leaflet() %>%
  addTiles() %>%  # Add default OpenStreetMap map tiles
  addMarkers(lng=-2.2912131, lat=53.4630716, popup="Old Trafford") %>% 
  addMarkers(lng=-4.2912131, lat=53.4630716, popup="The birthplace of R")
```

```{r}
topka <- dane %>% group_by(Squad) %>% summarise(AvgPkt = median(Points))

topka <- topka %>% filter(AvgPkt >60)

ggplot(topka, aes(x=Squad))+
  geom_col(stat = "identy", aes(y=AvgPkt), fill = "#00db74", color = "#37003c", size = 1.1)
```


## Analiza posiadania piłki

dsadsaasddsadsadas

### Podstawowe wykresy

```{r}
#| column: screen
#| fig-height: 10

#p <- ggplot(dane, aes(x=Season, y=Points, color=Squad))+
#  geom_line(aes(group = Squad))+
#  geom_point()

#ggplotly(p)
```

```{r}
avg_possession <- dane %>% group_by(Squad) %>% summarise(AvgPossession = mean(Possession), NumSeasons = n_distinct(Season))

avg_possession$Color <- ifelse(avg_possession$NumSeasons < 6, "#e0005e", "#00db74")

p <- ggplot(avg_possession, aes(x = reorder(Squad, -AvgPossession), y = AvgPossession, fill = Color)) +
  geom_bar(stat = "identity", position = "dodge", fill = avg_possession$Color) +
  labs(title = "Średnie posiadanie piłki z wszystkich sezonów",
       x = "Drużyna",
       y = "Średnie Posiadanie(%)")+
       geom_hline(yintercept = mean(avg_possession$AvgPossession), linetype="dashed", color = "#37003c", size = 1)+
       theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggplotly(p)
```
Na powyższym wykresie widzimy średnie posiadanie piłki każdej drużyny ze wszystkich sezonów, na zielono zaznaczone są drużyny które przez badany okres zawsze grały w pierwszej klasie rozgrywkowej. Przerywana linia reprezentuje średnią średnich wszystkich zespołów. Widzimy, że najlepsze zespoły utrzymują się przy piłce dłużej podczas meczu, jednak nie jest to reguła 

```{r}
avg_rank <- dane %>% group_by(Squad) %>% summarise(AvgRank = median(Rk), AvgGoals = round(mean(Goals.for),1), AvgEg = round(mean(Expected.goals),1))

selected_teams <- avg_rank %>% filter(AvgRank < 8)


# Narysuj wykres słupkowy
p <- ggplot(selected_teams, aes(x = Squad))+
  geom_col(stat = "identity", position = "dodge", aes(y=AvgGoals, fill="Goals"))+
  geom_col(stat = "identity", position = "dodge", aes(y=AvgEg, fill="Expected goals"))
ggplotly(p)


ggplot(selected_teams, aes(x = Squad))+
  geom_col(stat = "identity", position = "dodge", aes(y=AvgGoals, fill="Goals"))+
  geom_col(stat = "identity", position = "dodge", aes(y=AvgEg, fill="Expected 1goals", just=1))

```

```{r}
avg_rank <- dane %>% group_by(Squad) %>% summarise(AvgRank = median(Rk), AvgGoals = round(mean(Goals.for),1), AvgEg = round(mean(Expected.goals),1))

selected_teams <- avg_rank %>% filter(AvgRank > 15)



# Narysuj wykres słupkowy
p <- ggplot(selected_teams, aes(x = Squad))+
  geom_bar(stat = "identity", aes(y=AvgGoals, fill="Goals"))+
  geom_bar(stat = "identity", aes(y=AvgEg, fill="Expected goals", width=0.5))
ggplotly(p)
```

```{r}
podania <- dane[,c("Squad","Season","Assists", "Passes.completed", "Passes.attempted", "Short.passes.completed", "Short.passes.attempted", "Medium.passes.completed", "Medium.passes.attempted", "Long.passes.completed", "Long.passes.attempted", "Progressive.passes", "Live.ball.passes", "Dead.ball.passes", "Passes.from.free.kicks", "Through.balls", "Switches", "Crosses", "Throw.in.taken", "Corner.kicks", "Corner.kicks.in", "Corner.kicks.out", "Corner.kicks.straight", "Passes.offside", "Passes.blocked","Passes.into.penalty.area")]

podania_cluster <- podania %>% group_by(Squad) %>% summarise(proc.short=(sum(Short.passes.attempted)/sum(Passes.attempted)),
                                                             proc.mid=(sum(Medium.passes.attempted)/sum(Passes.attempted)),
                                                             proc.long=(sum(Long.passes.attempted)/sum(Passes.attempted)))

# Wybierz kolumny do analizy klastrowej (usuwając kolumny nieistotne lub unikalne)
nazwy <- podania_cluster$Squad
data_for_clustering <- podania_cluster %>% select(-c("Squad"))

# Znormalizuj dane
scaled_data <- scale(data_for_clustering)

# Przeprowadź analizę klastrową (k-means z przykładową liczbą klastrów - można dostosować)
k_clusters <- kmeans(scaled_data, centers = 3, nstart = 25)
k_clusters
# Dodaj przypisanie klastrów do danych
podania_cluster$Cluster <- as.factor(k_clusters$cluster)
podania_cluster$Squad <- nazwy

podania_cluster
# Wizualizacja klastrów
p <- ggplot(podania_cluster, aes(x = proc.mid, y = proc.short, color = Cluster)) +
  geom_point() +
  labs(title = "Analiza Klastrowa Drużyn",
       x = "Passes",
       y = "Long.passes.attempted")

ggplotly(p)
```

```{r}
#| column: page
#| fig-height: 10

x <- plot_ly(podania_cluster, x = ~proc.short, y = ~proc.mid, z = ~proc.long, color = ~Cluster, colors = c("#e0005e", "#00db74", "#37003c"), type = "scatter3d", mode = "markers", name = ~Squad)
ggplotly(x)
```
